// resource classes
class ResourceX {};

class ResourceY {};

struct ResourceZ {
    //...
    bool is_valid{};
};

ResourceX* acquire_x();

void init_y(ResourceY*);
void free_y(ResourceY*);
bool is_valid(ResourceY*);

void init_z(ResourceZ);
void free_z(ResourceZ);

bool do_something(ResourceY*)
{
    ResourceX* x_ptr = acquire_x();
    if (!x_ptr)
        return false;

    //...
    ResourceY y_object;
    init_y(&y_object);
    if (!is_valid(&y_object)) {
        delete x_ptr;
        return false;
    }

    ResourceZ z_object;
    init_z(z_object);

    if (!z_object.is_valid) {
        delete x_ptr;
        free_y(&y_object);
        return false;
    }

    // ...
    delete x_ptr;
    free_y(&y_object);
    free_z(z_object);

    return true;
}

